
import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';

// Define language options
export type Language = 'az' | 'ru' | 'tr' | 'en';

// Define translations type
type TranslationKeys = {
  [key: string]: string;
};

// Language data
type LanguageData = {
  name: string;
  nativeName: string;
  flag: string;
  translations: TranslationKeys;
};

// Define available languages
const languages: Record<Language, LanguageData> = {
  az: {
    name: 'Azerbaijani',
    nativeName: 'Az…ôrbaycan',
    flag: 'üá¶üáø',
    translations: {
      // Common
      dashboard: 'ƒ∞dar…ô paneli',
      regions: 'Regionlar',
      sectors: 'Sektorlar',
      schools: 'M…ôkt…ôbl…ôr',
      categories: 'Kateqoriyalar',
      columns: 'S√ºtunlar',
      users: 'ƒ∞stifad…ô√ßil…ôr',
      reports: 'Hesabatlar',
      settings: 'Parametrl…ôr',
      logout: '√áƒ±xƒ±≈ü',
      profile: 'Profil',
      notifications: 'Bildiri≈ül…ôr',
      search: 'Axtarƒ±≈ü',
      loading: 'Y√ºkl…ônir...',
      language: 'Dil',
      theme: 'Tema',
      dark: 'Qaranlƒ±q',
      light: 'ƒ∞≈üƒ±qlƒ±',
      system: 'Sistem',
      save: 'Yadda saxla',
      cancel: 'L…ôƒüv et',
      delete: 'Sil',
      edit: 'D√ºz…ôli≈ü et',
      add: '∆èlav…ô et',
      view: 'G√∂st…ôr',
      approve: 'T…ôsdiql…ô',
      reject: 'R…ôdd et',
      export: 'ƒ∞xrac et',
      import: 'ƒ∞dxal et',
      
      // Auth
      login: 'Daxil ol',
      email: 'E-po√ßt',
      password: '≈ûifr…ô',
      forgotPassword: '≈ûifr…ôni unutmusunuz?',
      resetPassword: '≈ûifr…ôni sƒ±fƒ±rla',
      
      // Dashboard
      welcomeBack: 'Xo≈ü g…ôldiniz',
      completionRate: 'Tamamlanma faizi',
      pendingApprovals: 'G√∂zl…ôy…ôn t…ôsdiql…ôr',
      latestNotifications: 'Son bildiri≈ül…ôr',
      quickActions: 'S√ºr…ôtli …ôm…ôliyyatlar',
      statistics: 'Statistika',
      
      // Super Admin specific
      totalRegions: '√úmumi regionlar',
      totalSectors: '√úmumi sektorlar',
      totalSchools: '√úmumi m…ôkt…ôbl…ôr',
      totalUsers: '√úmumi istifad…ô√ßil…ôr',
      systemActivity: 'Sistem aktivliyi',
      
      // Region and Sector specific
      pendingSchools: 'M…ôlumat g√∂zl…ôy…ôn m…ôkt…ôbl…ôr',
      approvedSchools: 'T…ôsdiql…ônmi≈ü m…ôkt…ôbl…ôr',
      rejectedSchools: 'R…ôdd edilmi≈ü m…ôkt…ôbl…ôr',
      
      // School specific
      pendingForms: 'G√∂zl…ôy…ôn formalar',
      approvedForms: 'T…ôsdiql…ônmi≈ü formalar',
      rejectedForms: 'R…ôdd edilmi≈ü formalar',
      dueSoon: 'Son tarixi yaxƒ±nla≈üan',
      overdue: 'Gecikdirilmi≈ü',
      
      // Notifications
      newCategory: 'Yeni kateqoriya',
      formApproved: 'Form t…ôsdiql…ôndi',
      formRejected: 'Form r…ôdd edildi',
      dueDateReminder: 'Son tarix xatƒ±rlatmasƒ±',
      systemUpdate: 'Sistem yenil…ôm…ôsi',
      
      // Not found
      notFound: 'S…ôhif…ô tapƒ±lmadƒ±',
      goBack: 'Geri qayƒ±t',
    }
  },
  ru: {
    name: 'Russian',
    nativeName: '–†—É—Å—Å–∫–∏–π',
    flag: 'üá∑üá∫',
    translations: {
      // Common
      dashboard: '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
      regions: '–†–µ–≥–∏–æ–Ω—ã',
      sectors: '–°–µ–∫—Ç–æ—Ä—ã',
      schools: '–®–∫–æ–ª—ã',
      categories: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
      columns: '–°—Ç–æ–ª–±—Ü—ã',
      users: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
      reports: '–û—Ç—á–µ—Ç—ã',
      settings: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
      logout: '–í—ã—Ö–æ–¥',
      profile: '–ü—Ä–æ—Ñ–∏–ª—å',
      notifications: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      search: '–ü–æ–∏—Å–∫',
      loading: '–ó–∞–≥—Ä—É–∑–∫–∞...',
      language: '–Ø–∑—ã–∫',
      theme: '–¢–µ–º–∞',
      dark: '–¢–µ–º–Ω–∞—è',
      light: '–°–≤–µ—Ç–ª–∞—è',
      system: '–°–∏—Å—Ç–µ–º–Ω–∞—è',
      save: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
      cancel: '–û—Ç–º–µ–Ω–∞',
      delete: '–£–¥–∞–ª–∏—Ç—å',
      edit: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
      add: '–î–æ–±–∞–≤–∏—Ç—å',
      view: '–ü—Ä–æ—Å–º–æ—Ç—Ä',
      approve: '–£—Ç–≤–µ—Ä–¥–∏—Ç—å',
      reject: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å',
      export: '–≠–∫—Å–ø–æ—Ä—Ç',
      import: '–ò–º–ø–æ—Ä—Ç',
      
      // Auth
      login: '–í–æ–π—Ç–∏',
      email: '–≠–ª. –ø–æ—á—Ç–∞',
      password: '–ü–∞—Ä–æ–ª—å',
      forgotPassword: '–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?',
      resetPassword: '–°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å',
      
      // Dashboard
      welcomeBack: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
      completionRate: '–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è',
      pendingApprovals: '–û–∂–∏–¥–∞—é—â–∏–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
      latestNotifications: '–ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      quickActions: '–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
      statistics: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
      
      // Super Admin specific
      totalRegions: '–í—Å–µ–≥–æ —Ä–µ–≥–∏–æ–Ω–æ–≤',
      totalSectors: '–í—Å–µ–≥–æ —Å–µ–∫—Ç–æ—Ä–æ–≤',
      totalSchools: '–í—Å–µ–≥–æ —à–∫–æ–ª',
      totalUsers: '–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      systemActivity: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã',
      
      // Region and Sector specific
      pendingSchools: '–®–∫–æ–ª—ã –æ–∂–∏–¥–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã—Ö',
      approvedSchools: '–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —à–∫–æ–ª—ã',
      rejectedSchools: '–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ —à–∫–æ–ª—ã',
      
      // School specific
      pendingForms: '–û–∂–∏–¥–∞—é—â–∏–µ —Ñ–æ—Ä–º—ã',
      approvedForms: '–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã',
      rejectedForms: '–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã',
      dueSoon: '–°–∫–æ—Ä–æ —Å—Ä–æ–∫',
      overdue: '–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ',
      
      // Notifications
      newCategory: '–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è',
      formApproved: '–§–æ—Ä–º–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞',
      formRejected: '–§–æ—Ä–º–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞',
      dueDateReminder: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å—Ä–æ–∫–µ',
      systemUpdate: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã',
      
      // Not found
      notFound: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
      goBack: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥',
    }
  },
  tr: {
    name: 'Turkish',
    nativeName: 'T√ºrk√ße',
    flag: 'üáπüá∑',
    translations: {
      // Common
      dashboard: 'Kontrol Paneli',
      regions: 'B√∂lgeler',
      sectors: 'Sekt√∂rler',
      schools: 'Okullar',
      categories: 'Kategoriler',
      columns: 'S√ºtunlar',
      users: 'Kullanƒ±cƒ±lar',
      reports: 'Raporlar',
      settings: 'Ayarlar',
      logout: '√áƒ±kƒ±≈ü',
      profile: 'Profil',
      notifications: 'Bildirimler',
      search: 'Ara',
      loading: 'Y√ºkleniyor...',
      language: 'Dil',
      theme: 'Tema',
      dark: 'Karanlƒ±k',
      light: 'Aydƒ±nlƒ±k',
      system: 'Sistem',
      save: 'Kaydet',
      cancel: 'ƒ∞ptal',
      delete: 'Sil',
      edit: 'D√ºzenle',
      add: 'Ekle',
      view: 'G√∂r√ºnt√ºle',
      approve: 'Onayla',
      reject: 'Reddet',
      export: 'Dƒ±≈üa Aktar',
      import: 'ƒ∞√ße Aktar',
      
      // Auth
      login: 'Giri≈ü',
      email: 'E-posta',
      password: '≈ûifre',
      forgotPassword: '≈ûifrenizi mi unuttunuz?',
      resetPassword: '≈ûifreyi sƒ±fƒ±rla',
      
      // Dashboard
      welcomeBack: 'Ho≈ü Geldiniz',
      completionRate: 'Tamamlanma Oranƒ±',
      pendingApprovals: 'Bekleyen Onaylar',
      latestNotifications: 'Son Bildirimler',
      quickActions: 'Hƒ±zlƒ± ƒ∞≈ülemler',
      statistics: 'ƒ∞statistikler',
      
      // Super Admin specific
      totalRegions: 'Toplam B√∂lgeler',
      totalSectors: 'Toplam Sekt√∂rler',
      totalSchools: 'Toplam Okullar',
      totalUsers: 'Toplam Kullanƒ±cƒ±lar',
      systemActivity: 'Sistem Aktivitesi',
      
      // Region and Sector specific
      pendingSchools: 'Veri Bekleyen Okullar',
      approvedSchools: 'Onaylanmƒ±≈ü Okullar',
      rejectedSchools: 'Reddedilmi≈ü Okullar',
      
      // School specific
      pendingForms: 'Bekleyen Formlar',
      approvedForms: 'Onaylanmƒ±≈ü Formlar',
      rejectedForms: 'Reddedilmi≈ü Formlar',
      dueSoon: 'Yakƒ±nda Sona Erecek',
      overdue: 'S√ºresi Ge√ßmi≈ü',
      
      // Notifications
      newCategory: 'Yeni Kategori',
      formApproved: 'Form Onaylandƒ±',
      formRejected: 'Form Reddedildi',
      dueDateReminder: 'Son Tarih Hatƒ±rlatmasƒ±',
      systemUpdate: 'Sistem G√ºncellemesi',
      
      // Not found
      notFound: 'Sayfa Bulunamadƒ±',
      goBack: 'Geri D√∂n',
    }
  },
  en: {
    name: 'English',
    nativeName: 'English',
    flag: 'üá¨üáß',
    translations: {
      // Common
      dashboard: 'Dashboard',
      regions: 'Regions',
      sectors: 'Sectors',
      schools: 'Schools',
      categories: 'Categories',
      columns: 'Columns',
      users: 'Users',
      reports: 'Reports',
      settings: 'Settings',
      logout: 'Logout',
      profile: 'Profile',
      notifications: 'Notifications',
      search: 'Search',
      loading: 'Loading...',
      language: 'Language',
      theme: 'Theme',
      dark: 'Dark',
      light: 'Light',
      system: 'System',
      save: 'Save',
      cancel: 'Cancel',
      delete: 'Delete',
      edit: 'Edit',
      add: 'Add',
      view: 'View',
      approve: 'Approve',
      reject: 'Reject',
      export: 'Export',
      import: 'Import',
      
      // Auth
      login: 'Login',
      email: 'Email',
      password: 'Password',
      forgotPassword: 'Forgot Password?',
      resetPassword: 'Reset Password',
      
      // Dashboard
      welcomeBack: 'Welcome Back',
      completionRate: 'Completion Rate',
      pendingApprovals: 'Pending Approvals',
      latestNotifications: 'Latest Notifications',
      quickActions: 'Quick Actions',
      statistics: 'Statistics',
      
      // Super Admin specific
      totalRegions: 'Total Regions',
      totalSectors: 'Total Sectors',
      totalSchools: 'Total Schools',
      totalUsers: 'Total Users',
      systemActivity: 'System Activity',
      
      // Region and Sector specific
      pendingSchools: 'Schools Pending Data',
      approvedSchools: 'Approved Schools',
      rejectedSchools: 'Rejected Schools',
      
      // School specific
      pendingForms: 'Pending Forms',
      approvedForms: 'Approved Forms',
      rejectedForms: 'Rejected Forms',
      dueSoon: 'Due Soon',
      overdue: 'Overdue',
      
      // Notifications
      newCategory: 'New Category',
      formApproved: 'Form Approved',
      formRejected: 'Form Rejected',
      dueDateReminder: 'Due Date Reminder',
      systemUpdate: 'System Update',
      
      // Not found
      notFound: 'Page Not Found',
      goBack: 'Go Back',
    }
  }
};

// Context type
interface LanguageContextType {
  currentLanguage: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
  languages: typeof languages;
}

// Create context
const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

// Context provider props
interface LanguageProviderProps {
  children: ReactNode;
}

// Context provider
export const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
  // Get default language from localStorage or use 'az'
  const getDefaultLanguage = (): Language => {
    const savedLanguage = localStorage.getItem('infoline-language') as Language;
    return savedLanguage || 'az';
  };

  const [currentLanguage, setCurrentLanguage] = useState<Language>(getDefaultLanguage);

  // Update localStorage when language changes
  useEffect(() => {
    localStorage.setItem('infoline-language', currentLanguage);
  }, [currentLanguage]);

  // Translate function
  const t = (key: string): string => {
    return languages[currentLanguage].translations[key] || key;
  };

  // Set language
  const setLanguage = (lang: Language) => {
    setCurrentLanguage(lang);
  };

  const value = {
    currentLanguage,
    setLanguage,
    t,
    languages,
  };

  return <LanguageContext.Provider value={value}>{children}</LanguageContext.Provider>;
};

// Custom hook to use the language context
export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};
