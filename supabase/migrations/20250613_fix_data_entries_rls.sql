-- ============================================================================
-- ƒ∞nfoLine Data Entries RLS Policy-l…ôri
-- ============================================================================
-- M…ôqs…ôd: data_entries c…ôdv…ôli √º√ß√ºn RLS policy-l…ôrini yaratmaq v…ô SchoolAdmin
-- istifad…ô√ßil…ôrinin m…ôlumat daxil etm…ô problemini h…ôll etm…ôk

-- ∆èvv…ôlki policy-l…ôri t…ômizl…ôy…ôk (…ôg…ôr m√∂vcuddursa)
DROP POLICY IF EXISTS "SuperAdmin data_entries full access" ON data_entries;
DROP POLICY IF EXISTS "RegionAdmin data_entries access" ON data_entries;
DROP POLICY IF EXISTS "SectorAdmin data_entries access" ON data_entries;
DROP POLICY IF EXISTS "SchoolAdmin data_entries access" ON data_entries;

-- ============================================================================
-- K√∂m…ôk√ßi Funksiyalar
-- ============================================================================

-- ƒ∞stifad…ô√ßinin rolunu t…ôhl√ºk…ôsiz ≈ü…ôkild…ô qaytaran funksiya
CREATE OR REPLACE FUNCTION public.get_user_role()
RETURNS text
LANGUAGE sql
SECURITY DEFINER
STABLE
AS $$
  SELECT role::text 
  FROM user_roles 
  WHERE user_id = auth.uid() 
  LIMIT 1;
$$;

-- ƒ∞stifad…ô√ßinin m…ôkt…ôb ID-sini qaytaran funksiya
CREATE OR REPLACE FUNCTION public.get_user_school_id()
RETURNS uuid
LANGUAGE sql
SECURITY DEFINER
STABLE
AS $$
  SELECT school_id 
  FROM user_roles 
  WHERE user_id = auth.uid() 
  LIMIT 1;
$$;

-- ƒ∞stifad…ô√ßinin sektor ID-sini qaytaran funksiya
CREATE OR REPLACE FUNCTION public.get_user_sector_id()
RETURNS uuid
LANGUAGE sql
SECURITY DEFINER
STABLE
AS $$
  SELECT sector_id 
  FROM user_roles 
  WHERE user_id = auth.uid() 
  LIMIT 1;
$$;

-- ƒ∞stifad…ô√ßinin region ID-sini qaytaran funksiya
CREATE OR REPLACE FUNCTION public.get_user_region_id()
RETURNS uuid
LANGUAGE sql
SECURITY DEFINER
STABLE
AS $$
  SELECT region_id 
  FROM user_roles 
  WHERE user_id = auth.uid() 
  LIMIT 1;
$$;

-- ============================================================================
-- RLS Policy-l…ôri
-- ============================================================================

-- RLS-i aktivl…ô≈üdiririk (…ôg…ôr aktivl…ô≈üdirimmi≈üs…ô)
ALTER TABLE data_entries ENABLE ROW LEVEL SECURITY;

-- 1. SuperAdmin - b√ºt√ºn m…ôlumatlar √º√ß√ºn tam giri≈ü
CREATE POLICY "SuperAdmin data_entries full access" 
ON data_entries 
FOR ALL 
TO authenticated
USING (public.get_user_role() = 'superadmin');

-- 2. RegionAdmin - √∂z regionundakƒ± m…ôkt…ôbl…ôrin m…ôlumatlarƒ±
CREATE POLICY "RegionAdmin data_entries access" 
ON data_entries 
FOR ALL 
TO authenticated
USING (
  public.get_user_role() = 'regionadmin' AND
  school_id IN (
    SELECT id FROM schools 
    WHERE region_id = public.get_user_region_id()
  )
);

-- 3. SectorAdmin - √∂z sektorundakƒ± m…ôkt…ôbl…ôrin m…ôlumatlarƒ±
CREATE POLICY "SectorAdmin data_entries access" 
ON data_entries 
FOR ALL 
TO authenticated
USING (
  public.get_user_role() = 'sectoradmin' AND
  school_id IN (
    SELECT id FROM schools 
    WHERE sector_id = public.get_user_sector_id()
  )
);

-- 4. SchoolAdmin - yalnƒ±z √∂z m…ôkt…ôbinin m…ôlumatlarƒ± (∆èN M√úH√úM!)
CREATE POLICY "SchoolAdmin data_entries access" 
ON data_entries 
FOR ALL 
TO authenticated
USING (
  public.get_user_role() = 'schooladmin' AND
  school_id = public.get_user_school_id()
);

-- ============================================================================
-- ƒ∞ndeksl…ôr (Performans √º√ß√ºn)
-- ============================================================================

-- RLS policy-l…ôrinin performansƒ±nƒ± artƒ±rmaq √º√ß√ºn indeksl…ôr
CREATE INDEX IF NOT EXISTS idx_data_entries_school_id ON data_entries(school_id);
CREATE INDEX IF NOT EXISTS idx_schools_sector_id ON schools(sector_id);
CREATE INDEX IF NOT EXISTS idx_schools_region_id ON schools(region_id);
CREATE INDEX IF NOT EXISTS idx_user_roles_user_id ON user_roles(user_id);

-- ============================================================================
-- Test v…ô Validasiya
-- ============================================================================

-- Policy-l…ôrin d√ºzg√ºn i≈ül…ôdiyini yoxlamaq √º√ß√ºn test sorƒüularƒ±
-- Bu sorƒüular manual olaraq SQL Editor-d…ô icra edil…ô bil…ôr:

-- TEST 1: SuperAdmin access test
-- SELECT COUNT(*) FROM data_entries; -- SuperAdmin √º√ß√ºn b√ºt√ºn m…ôlumatlar g√∂r√ºnm…ôlidir

-- TEST 2: SchoolAdmin access test  
-- SELECT COUNT(*) FROM data_entries; -- SchoolAdmin √º√ß√ºn yalnƒ±z √∂z m…ôkt…ôbinin m…ôlumatlarƒ± g√∂r√ºnm…ôlidir

-- TEST 3: Giri≈ü icaz…ôsi yoxlanmasƒ±
-- SELECT public.get_user_role(); -- ƒ∞stifad…ô√ßinin rolunu qaytarmalƒ±dƒ±r
-- SELECT public.get_user_school_id(); -- SchoolAdmin √º√ß√ºn m…ôkt…ôb ID-sini qaytarmalƒ±dƒ±r

-- ============================================================================
-- Log v…ô Debug
-- ============================================================================

-- Bu migration-ƒ±n uƒüurla tamamlandƒ±ƒüƒ±nƒ± log edirik
DO $$
BEGIN
  RAISE NOTICE '‚úÖ Data Entries RLS Policy-l…ôri uƒüurla yaradƒ±ldƒ±';
  RAISE NOTICE 'üîë SchoolAdmin artƒ±q data_entries c…ôdv…ôlin…ô giri≈ü …ôld…ô ed…ô bil…ôr';
  RAISE NOTICE 'üìä 4 policy yaradƒ±ldƒ±: SuperAdmin, RegionAdmin, SectorAdmin, SchoolAdmin';
  RAISE NOTICE '‚ö° Performance indeksl…ôri …ôlav…ô edildi';
END $$;
